// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// VpcLinkSpec defines the desired state of VpcLink.
//
// An API Gateway VPC link for a RestApi to access resources in an Amazon Virtual
// Private Cloud (VPC).
type VPCLinkSpec struct {

// The description of the VPC link.
Description *string `json:"description,omitempty"`
// The name used to label and identify the VPC link.
// +kubebuilder:validation:Required
Name *string `json:"name"`
// The key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
// The tag key can be up to 128 characters and must not start with aws:. The
// tag value can be up to 256 characters.
Tags map[string]*string `json:"tags,omitempty"`
// The ARN of the network load balancer of the VPC targeted by the VPC link.
// The network load balancer must be owned by the same Amazon Web Services account
// of the API owner.
// +kubebuilder:validation:XValidation:rule="self == oldSelf",message="Value is immutable once set"
// +kubebuilder:validation:Required
TargetARNs []*string `json:"targetARNs"`
}

// VPCLinkStatus defines the observed state of VPCLink
type VPCLinkStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRs managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// The identifier of the VpcLink. It is used in an Integration to reference
// this VpcLink.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty"`
	// The status of the VPC link. The valid values are AVAILABLE, PENDING, DELETING,
// or FAILED. Deploying an API will wait if the status is PENDING and will fail
// if the status is DELETING.
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty"`
	// A description about the VPC link status.
	// +kubebuilder:validation:Optional
	StatusMessage *string `json:"statusMessage,omitempty"`
}

// VPCLink is the Schema for the VPCLinks API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type VPCLink struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec   VPCLinkSpec   `json:"spec,omitempty"`
	Status VPCLinkStatus `json:"status,omitempty"`
}

// VPCLinkList contains a list of VPCLink
// +kubebuilder:object:root=true
type VPCLinkList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items []VPCLink `json:"items"`
}

func init() {
	SchemeBuilder.Register(&VPCLink{}, &VPCLinkList{})
}